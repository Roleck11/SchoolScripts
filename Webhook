local HttpService = game:GetService("HttpService")

local function SendWebhook(data)
    local success, response = pcall(function()
        return request({
            Url = _G.WebhookURL,
            Method = "POST",
            Headers = {
                ["Content-Type"] = "application/json"
            },
            Body = HttpService:JSONEncode(data)
        })
    end)

    if success then
        print("Webhook sent successfully!")
    else
        print("Error sending webhook:", response)
    end
end

local petCounts = {}
for _, pet in pairs(require(game.ReplicatedStorage.ClientModules.Core.ClientData).get_data()[game.Players.LocalPlayer.Name].inventory.pets) do
    if pet.id == "fire_dimension_2024_volcanic_rhino" then   
        pet = "Volcanic Rhino"
        if not petCounts[pet] then
            petCounts[pet] = 0
        end
        petCounts[pet] = petCounts[pet] + 1
    elseif pet.id == "fire_dimension_2024_burning_bunny" then   
        pet = "Burning Bunny"
        if not petCounts[pet] then
            petCounts[pet] = 0
        end
        petCounts[pet] = petCounts[pet] + 1
    elseif pet.id == "fire_dimension_2024_wildfire_hawk" then  
        pet = "Wildfire Hawk"
        if not petCounts[pet] then
            petCounts[pet] = 0
        end
        petCounts[pet] = petCounts[pet] + 1
    elseif pet.id == "fire_dimension_2024_flaming_fox" then   
        pet = "Flaming Fox"
        if not petCounts[pet] then
            petCounts[pet] = 0
        end
        petCounts[pet] = petCounts[pet] + 1
    end
end

local fields = {}
local field = {
    name = "Inventory",
    value = "",
    inline = false
}
table.insert(fields, field)
for pet, count in pairs(petCounts) do
    local field = {
        name = "",
        value = (tostring(count) .. " " .. pet .. "\n"),
        inline = false
    }
    table.insert(fields, field)
end

local data = {
    content = "",
    embeds = {
        {
            title = game.Players.LocalPlayer.Name,
            color = 5814783,
            fields = fields
        }
    }
}

_G.WebhookTime = 1
_G.WebhookTime = _G.WebhookTime * 60
print(_G.WebhookTime)

while true do
    SendWebhook(data)
    wait(_G.WebhookTime)
end
