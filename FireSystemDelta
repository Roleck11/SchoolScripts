----- INTRO SCRIPT ----------
if not game:IsLoaded() then
    while not game:IsLoaded() do wait(1) end
end
repeat task.wait() until game:IsLoaded() and game:GetService("ReplicatedStorage"):FindFirstChild("ClientModules") and game:GetService("ReplicatedStorage").ClientModules:FindFirstChild("Core") and game:GetService("ReplicatedStorage").ClientModules.Core:FindFirstChild("UIManager") and game:GetService("ReplicatedStorage").ClientModules.Core:FindFirstChild("UIManager").Apps:FindFirstChild("TransitionsApp") and game:GetService("Players").LocalPlayer.PlayerGui:FindFirstChild("TransitionsApp") and game:GetService("Players").LocalPlayer.PlayerGui:FindFirstChild("TransitionsApp"):FindFirstChild("Whiteout")

if game:GetService("Players").LocalPlayer.PlayerGui.TransitionsApp:FindFirstChild("Whiteout").Visible then 
    game:GetService("Players").LocalPlayer.PlayerGui.TransitionsApp:FindFirstChild("Whiteout").Visible = false 
end

for i,v in pairs(getconnections(game.Players.LocalPlayer.Idled)) do
  v:Disable()
end


for i, v in pairs(debug.getupvalue(require(game:GetService("ReplicatedStorage").Fsys).load("RouterClient").init, 4)) do
    v.Name = i
end

print("Executed Roleck Minigame Script - Earning Yakgwa")
---------------- Warn Control ---------------------------------
local old;old = hookfunction(warn,function(data)
    if data == "Tested pet entity pathfinding for a path that is too far away from its target!" then 
       return 
   end
   if data == "Tested pet entity pathfinding for a path that is too far away from its target!" or
      data == "[Pathfinder] Pathfinder Failed:" or
      data:match("AccurateTime sync inaccuracy, varianc") or
      data == "[AvatarEditorFocusSwitcher] Player's Character is nil" or
      data:match("[CharacterHider]") or
      data:match("Player:Move") or
      data:match("Notch") then
       return
   end
   return old(data)
end)
---------------------------------------------------------------

getgenv().firesignal = function(signal, ...)
	local connections = getconnections(signal)
	for _, connection in ipairs(connections) do
		connection:Fire(...)
	end
end

function clickUiButton(button, state)
    local buttonPosX = button.AbsolutePosition.X + button.AbsoluteSize.X / 2
    local buttonPosY = button.AbsolutePosition.Y + 66
    game:GetService("VirtualInputManager"):SendMouseButtonEvent(buttonPosX, buttonPosY, 0, state, game, 1)
end

repeat
    if game:GetService("Players").LocalPlayer.PlayerGui.NewsApp.EnclosingFrame.MainFrame.Contents.PlayButton.Visible then
        task.wait(0.3)
        clickUiButton(game:GetService("Players").LocalPlayer.PlayerGui.NewsApp.EnclosingFrame.MainFrame.Contents.PlayButton,true)
        task.wait()
        clickUiButton(game:GetService("Players").LocalPlayer.PlayerGui.NewsApp.EnclosingFrame.MainFrame.Contents.PlayButton,false)
    end
    if game:GetService("Players").LocalPlayer.PlayerGui.DialogApp.Dialog.RoleChooserDialog.ChooseParent.Visible then
        task.wait(0.3)
        clickUiButton(game:GetService("Players").LocalPlayer.PlayerGui.DialogApp.Dialog.RoleChooserDialog.ChooseParent,true)
        task.wait()
        clickUiButton(game:GetService("Players").LocalPlayer.PlayerGui.DialogApp.Dialog.RoleChooserDialog.ChooseParent,false)
    end
    task.wait(1.1)
    -- After Choose Parent
    game:GetService("Players").LocalPlayer.PlayerGui.DialogApp.Dialog:WaitForChild("RobuxProductDialog")
    if game:GetService("Players").LocalPlayer.PlayerGui.DialogApp.Dialog.RobuxProductDialog.Visible then 
        for i,v in pairs(game:GetService("Players").LocalPlayer.PlayerGui.DialogApp.Dialog.RobuxProductDialog.Buttons:GetChildren()) do 
            if v.ClassName == "ImageButton" then 
                clickUiButton(v,true)
                task.wait()
                clickUiButton(v,false)
            end
        end
    end
    game:GetService("Players").LocalPlayer.PlayerGui:WaitForChild("DailyLoginApp")
    if game:GetService("Players").LocalPlayer.PlayerGui.DailyLoginApp.Enabled and game:GetService("Players").LocalPlayer.PlayerGui.DailyLoginApp.Frame.Visible then 
        for i,v in pairs(game:GetService("Players").LocalPlayer.PlayerGui.DailyLoginApp.Frame.Body.Buttons:GetChildren()) do 
            if v.Name == "ClaimButton" then
                clickUiButton(v,true)
                task.wait()
                clickUiButton(v,false)
            end 
        end
    end
    game:GetService("Players").LocalPlayer.PlayerGui.DialogApp.Dialog:WaitForChild("UpdatesDialog")
    if game:GetService("Players").LocalPlayer.PlayerGui.DialogApp.Dialog.UpdatesDialog.Visible then 
        for i,v in pairs(game:GetService("Players").LocalPlayer.PlayerGui.DialogApp.Dialog.UpdatesDialog.Buttons:GetChildren()) do 
            if v.ClassName == "ImageButton" then 
                clickUiButton(v,true)
                task.wait()
                clickUiButton(v,false)
            end
        end
    end
until game:GetService("Players").LocalPlayer.Character and workspace.Camera.CameraSubject == game:GetService("Players").LocalPlayer.Character:WaitForChild("Humanoid")

task.spawn(function()
    repeat task.wait() until game:IsLoaded() and game.Players.LocalPlayer.Character and game.Players.LocalPlayer.Character:FindFirstChild("HumanoidRootPart")
    task.wait(4)
    game:GetService("Players").LocalPlayer.PlayerGui.DialogApp.Dialog:WaitForChild("RobuxProductDialog")
    if game:GetService("Players").LocalPlayer.PlayerGui.DialogApp.Dialog.RobuxProductDialog.Visible then 
        for i,v in pairs(game:GetService("Players").LocalPlayer.PlayerGui.DialogApp.Dialog.RobuxProductDialog.Buttons:GetChildren()) do 
            if v.ClassName == "ImageButton" then 
                clickUiButton(v,true)
                task.wait()
                clickUiButton(v,false)
            end
        end
    end
    wait(0.5)
    game:GetService("Players").LocalPlayer.PlayerGui:WaitForChild("DailyLoginApp")
    if game:GetService("Players").LocalPlayer.PlayerGui.DailyLoginApp.Enabled and game:GetService("Players").LocalPlayer.PlayerGui.DailyLoginApp.Frame.Visible then 
        for i,v in pairs(game:GetService("Players").LocalPlayer.PlayerGui.DailyLoginApp.Frame.Body.Buttons:GetChildren()) do 
            if v.Name == "ClaimButton" then
                clickUiButton(v,true)
                task.wait()
                clickUiButton(v,false)
                wait(0.5)
                clickUiButton(v,true)
                task.wait()
                clickUiButton(v,false)
            end 
        end
    end
    wait(0.5)
    game:GetService("Players").LocalPlayer.PlayerGui.DialogApp.Dialog:WaitForChild("UpdatesDialog")
    if game:GetService("Players").LocalPlayer.PlayerGui.DialogApp.Dialog.UpdatesDialog.Visible then 
        for i,v in pairs(game:GetService("Players").LocalPlayer.PlayerGui.DialogApp.Dialog.UpdatesDialog.Buttons:GetChildren()) do 
            if v.ClassName == "ImageButton" then 
                clickUiButton(v,true)
                task.wait()
                clickUiButton(v,false)
            end
        end
    end
end)

for i,v in pairs(getconnections(game.Players.LocalPlayer.Idled)) do
  v:Disable()
end
---------- Extra GUI Control and Buttons and IMAGES blah blah -------------
game:GetService("Players").LocalPlayer.PlayerGui.DialogApp.Enabled = false
game:GetService("Players").LocalPlayer.PlayerGui.InteractionsApp.Enabled = false
game:GetService("Players").LocalPlayer.PlayerGui.NavigatorApp.Enabled = false

------- Transition App Disabled (whatever it is) --------
require(game.ReplicatedStorage.ClientModules.Core.UIManager.Apps.TransitionsApp).transition = function() return end 
require(game.ReplicatedStorage.ClientModules.Core.UIManager.Apps.TransitionsApp).sudden_fill = function() return end
if game:GetService("Players").LocalPlayer.PlayerGui.TransitionsApp:FindFirstChild("Whiteout").Visible then 
    game:GetService("Players").LocalPlayer.PlayerGui.TransitionsApp:FindFirstChild("Whiteout").Visible = false 
end
--------------------   GUI   ---------------
local OrionLib = loadstring(game:HttpGet(('https://raw.githubusercontent.com/Roleck11/TaskScripts/main/LibSource')))()

local Window = OrionLib:MakeWindow({
    Name = tostring(game.Players.LocalPlayer.Name) .. " - RoloxBot",
    HidePremium = false, 
    SaveConfig = false, 
    ConfigFolder = "RoloxBotConfig",
    IntroEnabled = true,
    IntroText = "RoloxBot - Adopt Me",
    IntroIcon = "rbxassetid://887521804",
    Icon = "rbxassetid://887521804",
})

local MainTab = Window:MakeTab({
	Name = "Main",
	Icon = "rbxassetid://4483345998",
	PremiumOnly = false
})

MainTab:AddButton({
	Name = "Check Age Potions",
	Callback = function()
        PotionTable = {}
        for i,v in pairs(require(game.ReplicatedStorage.ClientModules.Core.ClientData).get_data()[game.Players.LocalPlayer.Name].inventory.food) do
            if v.id == "pet_age_potion" then        
                table.insert(PotionTable, i)
            end
        end
        if PotionTable == nil then
            PotionsCheckCounter = 0
        else
            PotionsCheckCounter = #PotionTable
        end

        OrionLib:MakeNotification({
            Name = "Aging Potions :",
            Content = "Number of Potions : " .. tostring(PotionsCheckCounter),
            Image = "rbxassetid://4483345998",
            Time = 5
        })
  	end    
})

MainTab:AddButton({
	Name = "Check Yakgwa Currency",
	Callback = function()
        YakgwaAmt = require(game.ReplicatedStorage.ClientModules.Core.ClientData).get_data()[game.Players.LocalPlayer.Name].yakgwa_2024

        OrionLib:MakeNotification({
            Name = "Yakgwa :",
            Content = "Number of New Currency : " .. tostring(YakgwaAmt),
            Image = "rbxassetid://4483345998",
            Time = 5
        })
  	end    
})
------------ MAIN MINIGAME SCRIPT -------------
local get_thread_identity = get_thread_context or getthreadcontext or getidentity or syn.get_thread_identity
local set_thread_identity = set_thread_context or setthreadcontext or setidentity or syn.set_thread_identity
local Location = nil
local Player = game.Players.LocalPlayer
for i, v in pairs(debug.getupvalue(require(game:GetService("ReplicatedStorage").Fsys).load("RouterClient").init, 4)) do
    v.Name = i
end

_G.BowlCounter = 0
_G.AlreadyExecuted = false

function CollectDropOff()
    _G.AlreadyExecuted = true
    bowls = workspace.Interiors.Lunar2024Shop.Arena.Throwables:GetChildren()
    for i, v in pairs(bowls) do
        Player.Character.HumanoidRootPart.CFrame = CFrame.new(v.WorldPivot.Position)
        game.ReplicatedStorage.API["MinigameAPI/MessageServer"]:FireServer("red_light_green_light", "attempt_drop_off", 1)
        print("Collected")
        _G.BowlCounter = _G.BowlCounter + 1
        if _G.BowlCounter > 25 then
            break
        end
        wait(0.25)
    end
    _G.BowlCounter = 0
    wait(90)
    _G.AlreadyExecuted = false
end

function GameStatus()
    return workspace.StaticMap.red_light_green_light_minigame_state["is_game_active"].Value
end

for i, v in pairs(getgc()) do
    if type(v) == "function" then
        if getfenv(v).script == game.ReplicatedStorage.ClientModules.Core.InteriorsM.InteriorsM then
            if table.find(getconstants(v), "LocationAPI/SetLocation") then
                Location = v
                break
            end
        end
    end
end
local SetLocation = function(A, B, C)
    local O = get_thread_identity()
    set_thread_identity(2)
    Location(A, B, C)
    set_thread_identity(O)
end
local GoToMinigameLunar = function()
    SetLocation("Lunar2024Shop", "MainDoor", {})
    wait(2)
    game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(workspace.Interiors.Lunar2024Shop.RedLightGreenLight.JoinZone.WorldPivot.Position)
end
function GetLobby()
    for i, v in pairs(workspace.Interiors:GetChildren()) do
        if tostring(v) == "Lunar2024Shop" then
            return true
        else
            print(v)
            return false
        end
    end
end
_G.LLLaffan = true
while _G.LLLaffan == true do
    if GetLobby() == true then
        print("Inside Lobby")
        if (workspace.Interiors.Lunar2024Shop.RedLightGreenLight.JoinZone.WorldPivot.Position and (game.Players.LocalPlayer.Character.HumanoidRootPart.Position - workspace.Interiors.Lunar2024Shop.RedLightGreenLight.JoinZone.WorldPivot.Position).magnitude < 23) then
            print("Inside Join Zone")
        elseif GameStatus() == true then
            print("Inside Minigame")
            if _G.AlreadyExecuted == false then
                CollectDropOff()
            end
        else
            if GetLobby() == true then
                print("In Lobby, But Not in Join Zone / Minigame")
                game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(workspace.Interiors.Lunar2024Shop.RedLightGreenLight.JoinZone.WorldPivot.Position)
            else
                GoToMinigameLunar()
            end
        end
    else
        GoToMinigameLunar()
    end
    wait(5)
end
