
if not game:IsLoaded() then
    while not game:IsLoaded() do wait(1) end
end

loadstring(game:HttpGet("https://raw.githubusercontent.com/Roleck11/MainScripts/main/AdoptMeIntroCheck"))()

--[[Anti AFK]] for i,v in pairs(getconnections(game.Players.LocalPlayer.Idled)) do v:Disable() end

local Player = game:GetService("Players").LocalPlayer
local HRP = Player.Character.HumanoidRootPart
local RS = game.ReplicatedStorage
local Fsys = require(RS:WaitForChild("Fsys")).load
local get_thread_identity = get_thread_context or getthreadcontext or getidentity or syn.get_thread_identity
local set_thread_identity = set_thread_context or setthreadcontext or setidentity or syn.set_thread_identity

-- Disable GUIs
Player.PlayerGui.DialogApp.Enabled = false
Player.PlayerGui.InteractionsApp.Enabled = false
Player.PlayerGui.NavigatorApp.Enabled = false

--------  Game Status Check ----------
function GameStatus()
    return workspace.StaticMap["tile_skip_minigame_minigame_state"].is_game_active.Value
end

function GameLoading()
    return workspace.StaticMap["tile_skip_minigame_minigame_state"].players_loading.Value
end

function GetPumpkins()
    for _, id in workspace.Collectables:GetChildren() do
        --if not id:IsA("Model") then continue end
        HRP.CFrame = CFrame.new(id.WorldPivot.Position)
        print("Getting:", id.Name)
        repeat task.wait() until not id.Parent
    end 
end

function GetAvailablePumpkins()
    ClientData = require(game.ReplicatedStorage.ClientModules.Core.ClientData).get_data()[game.Players.LocalPlayer.Name]
    avail = 0
    for i,v in pairs(ClientData["halloween_2024_purple_pumpkins"]["available_pumpkins"]) do
        if i ~= "TileSkipMinigame" then
            avail += v
        end
    end
    return avail ~= 0
end

SetLocation = function(A, B)
    local O = get_thread_identity()
    set_thread_identity(2)
    require(game.ReplicatedStorage.ClientModules.Core.InteriorsM.InteriorsM).enter(A, B, {["studs_ahead_of_door"] = 15})
    set_thread_identity(O)
end

GoToMainMap = function()
    spawn(function()
        pcall(function()
            SetLocation("Halloween2024Shop", "MainDoor")
        end)
    end)
    repeat task.wait(1) until game.workspace.Interiors:FindFirstChildWhichIsA("Model")  
    return false
end

function GetMainMap()
    return workspace.Interiors:FindFirstChild("Halloween2024Shop")
end

function GetLobby()
    pcall(function()
    repeat task.wait(1) until workspace.Interiors:FindFirstChild("Halloween2024Shop")
    repeat task.wait(1) until workspace.Interiors["Halloween2024Shop"]:FindFirstChild("TileSkip")
    repeat task.wait(1) until workspace.Interiors["Halloween2024Shop"].TileSkip:FindFirstChild("JoinZone")
    repeat task.wait(1) until workspace.Interiors["Halloween2024Shop"].TileSkip.JoinZone:FindFirstChild("Ring")
    if (workspace.Interiors["Halloween2024Shop"].TileSkip.JoinZone.Ring.Position - HRP.Position).Magnitude <= 15 then
        return true
    end
    end)
    return false
end

-- Database Code

-- Optimization
workspace.Pets.ChildAdded:Connect(function(c)
    task.wait(1)
    for i, v in pairs(workspace.Pets:GetChildren()) do
        v.Parent = game.ReplicatedStorage
    end
end)

workspace.PlayerCharacters.ChildAdded:Connect(function(c)
    task.wait(1)
    for i, v in pairs(workspace.PlayerCharacters:GetChildren()) do
        if v.Name ~= game.Players.LocalPlayer.Name then
            v.Parent = game.ReplicatedStorage
        end
    end
end)

workspace.Interiors.ChildAdded:Connect(function(c)
    task.wait(1)
    if workspace.Interiors:FindFirstChild("Halloween2024Shop") then
        for i,v in pairs(workspace.Interiors.Halloween2024Shop:GetChildren()) do
            if v.Name == "Visual" then
                for l,o in pairs(workspace.Interiors.Halloween2024Shop.Visual:GetChildren()) do
                    if o.Name ~= "Tiles" then
                        o.Parent = game.ReplicatedStorage
                    end
                end
            end
        end
    end
end)

print("== Starting Auto Halloween 2024 Event ==")
while task.wait(1) do
    if GetAvailablePumpkins() then
        SetLocation("MainMap", "Neighborhood/MainDoor")
        GetPumpkins()
        task.wait(1)
        SetLocation("SkyCastle", "MainDoor")
        GetPumpkins()
        task.wait(1)
        SetLocation("Neighborhood", "MainDoor")
        GetPumpkins()
        task.wait(1)
    end
    if GetMainMap() then
        if GetLobby() then
            if GameLoading() then
                task.wait(5)
            end
        else
            pcall(function()
                HRP.CFrame = workspace.Interiors["Halloween2024Shop"].TileSkip.JoinZone.Ring.CFrame + Vector3.new(0, 5,0)
            end)
        end
    elseif GameStatus() and workspace.Interiors:FindFirstChild("TileSkipMinigame") then
        repeat task.wait(1) until workspace.Interiors:FindFirstChild("TileSkipMinigame") and workspace.Interiors.TileSkipMinigame:FindFirstChild("Minigame") 
        print("Starting Minigame..")
        for _, id in workspace:WaitForChild("Collectables"):GetChildren() do
            --if not id:IsA("Model") then continue end
            HRP.CFrame = CFrame.new(id.WorldPivot.Position)
            print("Getting:", id.Name)
            repeat task.wait() until not id.Parent
        end
        repeat task.wait()
            game:GetService("ReplicatedStorage").API:FindFirstChild("MinigameAPI/MessageServer"):FireServer("tile_skip_minigame", "reached_goal")
        until not game.Workspace.Interiors:FindFirstChild("TileSkipMinigame") and not GameStatus()
        print("Minigame Ended!")
    else
        print("Going to Main Map..")
        GoToMainMap()
    end
end
